### AWS-EC2

- EC2 Elastic Compute Cloud: servers in the Cloud
- Multiple Regions: better availability and low latency
- each Region conteins multiple Availability Zones

- VPC Virtual Private Cloud
	- contains multiple subnets
	- Private subnet = Database
	- Public aubnet = http server

- Running Instances > Launch Instance:
	1. Choose an Amazom Machine Image (AMI) >>> Amazon Linux 2 AMI (HVM) (copy ami number)
	2. Choose an Instance type >>> t2.micro
	3. Configure Instance Details:
		- Network: vpc default (copy number)
	4. Add Storage
	5. Add Tags
	6. Configure Security Group:
		- New Security Group
		- Add Rule type: SSH, HTTP, HTTPS
	
- CIDR = IPs block range:
	CIDR ["0.0.0.0/0"] = all IPs

- Key-Pairs:
	- Create key pair, name: defailt-ec2, file format: .pem
	- never share or publish the .pem file!
	- put the .pem file in ~/aws/aws_keys
	- chmod 400 default-ec2.pem (read only)

- Security Group:
	- https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group

-  AWS Instance:
	- https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance

- Arguments:
	- see "Force replacement" or "Force new resource".
	
- Immutable Srevers with IAC Infrastructure as Code:
	- when updating the project, create a new server with the update and after that remove the old server 

- Data Provider:
	- use default AWS values (default VPC. etc)
	- https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_vpc 
	- in main.tf: 
		resource "aws_default_vpc" "default" {}
		vpc_id = aws_default_vpc.default.id
	- Subnets:
		- main.tf: 
			data "aws_subnet_ids" "default_subnets" {
				vpc_id = aws_default_vpc.default.id
			} 
		- (console): > data.aws_subnet_ids.default_subnets
			> tolist(data.aws_subnet_ids.default_subnets.ids)[0]

- $ terraform graph
	https://dreampuf.github.io/GraphvizOnline/

- user_data:
	- main.tf:
		user_data = file("install_httpd.sh")
	- install_httpd.sh:
		#!/bin/bash
		yum install httpd -y
		sudo service httpd start
		DNS=$(curl -s http://169.254.169.254/latest/meta-data/public-hostname)
		sudo echo "Virtual Server link: http://$DNS" > /var/www/html/index.html
	- $ terraform apply -target='aws_instance.http_server["user_data"]'

- SSH to EC2:
	-$ ssh -i ~/aws/aws_keys/default-ec2.pem ec2-user@54.157.130.224
	- cat /var/www/html/index.html
	
- SSH from Public to Private instance:
  - ssh -i ~/aws/aws_keys/default-ec2.pem ec2-user@3.91.236.13
  - sudo nano default-ec2.pem
    > copy-paste text from ~/aws/aws_keys/default-ec2.pem
  - sudo chmode 400 default-ec2.pem
  - sudo ssh -i default-ec2.pem ec2-user@10.0.3.101
